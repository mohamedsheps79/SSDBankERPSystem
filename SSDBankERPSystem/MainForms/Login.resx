<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QhCAEIQgBCEIAQhCAEIQgHCEIQH/2Q==
</value>
  </data>
</root>